{"mappings":"YAqCA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAe,CAAER,WAAUC,SACjCQ,YAAW,WACPP,EACFI,EAAQE,GAERD,EAAOC,E,GAENP,E,IAhDPS,QAAQC,IAAI,aAECC,SAASC,cAAc,SAG/BC,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALhB,MAAOoB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3BF,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnBF,EAASC,OAAOD,EAAOE,OAIvB,IADgD,IAA5CC,EAAeL,EACVM,EAAI,EAAGA,GAAKJ,EAAQI,IAE3B3B,EAAc2B,EAAGD,GAEdE,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBS,QAAQC,IAAI,uBAAwCkB,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3D6B,OAAM,SAAAF,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBS,QAAQC,IAAI,sBAAqCkB,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAI3DwB,GAAgBJ,C","sources":["src/js/03-promises.js"],"sourcesContent":["console.log(\"test12991\");\n\nconst form = document.querySelector('.form');\n\n\nform.addEventListener(\"submit\", handleSubmit);\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  \n  let {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n\n  // Цикл створення промісів основуючись на введенних даних \n  let initialDelay = delay;\n  for (let i = 1; i <= amount; i++) {\n    \n    createPromise(i, initialDelay)\n  \n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      \n    \n    initialDelay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    const promiseValue = { position, delay };\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(promiseValue);\n  } else {\n      reject(promiseValue);\n  }\n    }, delay);\n  });\n};\n  \n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","promiseValue","setTimeout","console","log","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","initialDelay","i","then","param","concat","catch"],"version":3,"file":"03-promises.cfd04678.js.map"}